// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$mat-primary: (
  50: #29235c,
  100: #29235c,
  200: #29235c,
  300: #29235c,
  400: #29235c,
  500: #29235c,
  600: #29235c,
  700: #29235c,
  800: #29235c,
  900: #29235c,
  A100: #29235c,
  A200: #29235c,
  A400: #29235c,
  A700: #d50000,
  contrast: (
    50: $black-87-opacity,
    100: $black-87-opacity,
    200: $black-87-opacity,
    300: $black-87-opacity,
    400: $black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: $white-87-opacity,
    900: $white-87-opacity,
    A100: $black-87-opacity,
    A200: white,
    A400: white,
    A700: white,
  ),
);

$mat-accent: (
  50: #f39200,
  100: #f39200,
  200: #f39200,
  300: #f39200,
  400: #f39200,
  500: #f39200,
  600: #f39200,
  700: #f39200,
  800: #f39200,
  900: #f39200,
  A100: #f39200,
  A200: #f39200,
  A400: #f39200,
  A700: #d50000,
  contrast: (
    50: $black-87-opacity,
    100: $black-87-opacity,
    200: $black-87-opacity,
    300: $black-87-opacity,
    400: $black-87-opacity,
    500: white,
    600: white,
    700: white,
    800: $white-87-opacity,
    900: $white-87-opacity,
    A100: $black-87-opacity,
    A200: white,
    A400: white,
    A700: white,
  ),
);

$frontend-client-primary: mat-palette($mat-primary);
$frontend-client-accent: mat-palette($mat-accent);

// The warn palette is optional (defaults to red).
$frontend-client-warn: mat-palette($mat-red);

// ? 3. Define a custom heading typography config
$heading-font-family: "'Work Sans', sans-serif";
$typography: mat-typography-config(
  $display-4: mat-typography-level(65px, $font-family: $heading-font-family),
  $display-3: mat-typography-level(45px, $font-family: $heading-font-family),
  $display-2: mat-typography-level(35px, $font-family: $heading-font-family),
  $display-1: mat-typography-level(24px, $font-family: $heading-font-family),
  $headline: mat-typography-level(14px, $font-family: $heading-font-family),
  $title: mat-typography-level(15px, $font-family: $heading-font-family),
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-client-theme: mat-light-theme(
  (
    color: (
      primary: $frontend-client-primary,
      accent: $frontend-client-accent,
      warn: $frontend-client-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($frontend-client-theme);
@include angular-material-typography($typography);
